#data input
#PCA and HCA
read.table(file = "clipboard", header = TRUE, sep = "\t", dec = ",")-> enqa
enqa -> allnew
attach(allnew)
names(allnew)
summary(allnew) # presents an statistical summary of data
#############################################################################################################################################
#PCA/psych
require(psych) #load package
require(FactoMineR) #load package
require(GPArotation) #load package
spc <- principal(allnew [,2:17],4, residuals=TRUE, rotate="varimax", scores=TRUE, impute="median") #performs a PCA analysis with varimax rotation where the not available results are replaced by median (impute="median")
#Salvar/Write.infile
# its allow save your results in a file type .txt
write.infile(print(pc), file="/home/results.txt", sep="\t", nb.dec=4, append=T)
pp <- principal(plantasnew [,2:17],4, residuals=TRUE, rotate="varimax", scores=TRUE)
write.infile(print(pc), file="/home/results.txt", sep="\t", nb.dec=4, append=T)
#############################################################################################################################################
#PCA/FactoMineR
#This package has intersting tool for PCA graphs
e <- enqa
e1 <- na.omit(e) #omit the not available (na) results 
row.names(e1) <- e1[,1]
epca <- PCA(enqa, quanti.sup=c(8,13), quali.sup=c(1,18), scale.unit=T) # graphs generated automatically
plot(epca, habillage = 18, col.hab=c("green", "red")) # differents colors are used to plot an qualitative variable chosen
barplot(epca$eig[,1], main = "Eigenvalues", names.arg = paste("Dim", 1:nrow(epca$eig), sep = "")) #scree plot graph
plot(epca, choix = "var", axes = c(3, 4), lim.cos2.var = 0) # the argument 'axes' allows to choose different principal components, the default is the first and second
print(epca) #print could be used to each item of FactoMineR results
#Salvar/Write.infile
write.infile(print(epca), file="directory/myfile.txt", sep="\t", nb.dec=8, append=T) # its allow save your results in a file type .txt
#############################################################################################################################################
# Ward Hierarchical Clustering with Bootstrapped p values
# Prepare data
e1 <- na.omit(e) # listwise deletion of missing
e2 <- scale(e1[,2:17]) # standardize variables 
library(pvclust) #load package
fit <- pvclust(e2, method.hclust="ward", method.dist="euclidean")
plot(fit) # dendogram with p values
# add rectangles around groups highly supported by the data
pvrect(fit, alpha=.95)
seplot(fit)
seplot(fit, identify=TRUE)
dev.off() #end the saving graphs
#############################################################################################################################################
#### Ward Hierarchical Clustering with Bootstrapped p values####
# Prepare Data
read.table(file = "clipboard", header = TRUE, sep = "\t", dec = ",")-> nit #data input
nit -> n
n1 <- na.omit(n) # listwise deletion of missing
n2 <- scale(n1[,2:17]) # standardize variables 
library(pvclust)
fit <- pvclust(n2, method.hclust="ward", method.dist="euclidean")
plot(fit) # dendogram with p values
# add rectangles around groups highly supported by the data
pvrect(fit, alpha=.95)
jpeg(file="asdfasd.jpg", width=580, height=432, quality = 100)
#############################################################################################################################################
#System information
R.version
_                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          3                           
minor          0.2                         
year           2013                        
month          09                          
day            25                          
svn rev        63987                       
language       R                           
version.string R version 3.0.2 (2013-09-25)
nickname       Frisbee Sailing
#############################################################################################################################################
#Functions to save graphs
Function              Output to
pdf("mygraph.pdf") ->	pdf file
win.metafile("mygraph.wmf") ->	windows metafile
png("mygraph.png") ->	png file
jpeg("mygraph.jpg") ->	jpeg file
bmp("mygraph.bmp") ->	bmp file
postscript("mygraph.ps") ->	postscript file 
#############################################################################################################################################
